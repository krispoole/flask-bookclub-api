schema {
    query: Query
    mutation: Mutation
}

type User {
    id: ID!
    email: String!
    password: String!
}

type Book {
    id: ID!
    title: String!
    author: String!
    yearOfPublication: Int
    genre: String
}

type UserResult {
    success: Boolean!
    errors: [String]
    user: User
}

type UsersResult {
    success: Boolean!
    errors: [String]
    users: [User]
}

type BookResult {
    success: Boolean!
    errors: [String]
    book: Book
}

type BooksResult {
    success: Boolean!
    errors: [String]
    books: [Book]
}

type Query {
    users: UsersResult
    user(userId: ID!): UserResult
    books: BooksResult
    book(bookId: ID!): BookResult
}

type DeleteUserResult {
    success: Boolean!
    errors: [String]
}

type DeleteBookResult {
    success: Boolean!
    errors: [String]
}

type Mutation {
    createUser(email: String!, password: String!): UserResult!
    deleteUser(userId: ID!): DeleteUserResult!
    createBook(title: String!, author: String!, yearOfPublication: Int, genre: String): BookResult!
    deleteBook(bookId: ID!): DeleteBookResult!
}